"""Module to manage input players data.

The players data is generated by an excel file, which is encoded using base64
and stored below, in the variable `BASE64_DF`.
"""

from ast import literal_eval
from dataclasses import dataclass
from pathlib import Path
from typing import List

from xlrd import open_workbook

from server_manager.src.exceptions import SearchError


@dataclass
class PlayerInterface:
    """Simple interface for players (more advanced than a simple namedtuple)."""

    username: str
    uuid: str
    online: bool

    def __post_init__(self):
        self.online = literal_eval(str(self.online))


def get_uuid(username, mode) -> str:
    """Returns the uuid of a player given its username and online mode.

    Args:
        username (str): username of the player.
        mode (bool): online mode of the player.

    Raises:
        SearchError: if no player was found.

    Returns:
        str: uuid of the player.
    """

    players_data = get_players_data()
    for player in players_data:
        if player.username == username and player.online == mode:
            return player.uuid

    raise SearchError(
        "No player found with username=%s and online=%s" % (username, mode)
    )


def get_username(uuid) -> str:
    """Returns the username of a player given its uuid.

    Args:
        uuid (str): uuid of the player.

    Raises:
        SearchError: if no player was found.

    Returns:
        str: username of the player.
    """

    players_data = get_players_data()

    for player in players_data:
        if player.uuid == uuid:
            return player.username

    raise SearchError("No player found with uuid=%s" % uuid)


def get_mode(uuid) -> bool:
    """Returns the mode of a player given its uuid.

    Args:
        uuid (str): uuid of the player.

    Raises:
        SearchError: if no player was found.

    Returns:
        bool: online mode of the player.
    """

    players_data = get_players_data()

    for player in players_data:
        if player.uuid == uuid:
            return player.online

    raise SearchError("No player found with uuid=%s" % uuid)


# TODO: rename get_players_data → read_excel
# TODO: rename dataframe.py → excel_manager.py or something like that, containing "excel"
def get_players_data() -> List[PlayerInterface]:
    """Reads the excel and returns the players uuids and usernames.

    Returns:
        List[PlayerInterface]: list of players found. Each player appears twice,
            one with online=True and one with online=False.
    """

    excel_path = Path(__file__).with_name("players-data.xlsx").absolute()

    workbook = open_workbook(excel_path.as_posix())

    worksheet = workbook.sheet_by_index(0)
    first_row = []

    for col in range(worksheet.ncols):
        first_row.append(worksheet.cell_value(0, col))

    data = []
    for row in range(1, worksheet.nrows):
        record = {}
        for col in range(worksheet.ncols):
            record[first_row[col]] = str(worksheet.cell_value(row, col)).strip()
        data.append(PlayerInterface(**record))
    return data
